// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
	apply from: "config.gradle"
	repositories {
		google()
		mavenCentral()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:4.1.3'
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
		classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
		classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navVersion"

	}
}

//强制使用相同版本的库
subprojects {
	project.configurations.all {

		all*.exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
		all*.exclude group: 'androidx.navigation', module: 'navigation-fragment'

		resolutionStrategy.eachDependency { DependencyResolveDetails details ->
			def requested = details.requested
			if (requested.group == 'androidx.appcompat') {
				if (requested.module.name == 'appcompat') {
					details.useVersion rootProject.ext.appcompatVersion
				}
			} else if (requested.group == 'androidx.annotation') {
				if (requested.module.name == 'annotation') {
					details.useVersion rootProject.ext.annotationVersion
				}
			} else if (requested.group == 'androidx.drawerlayout') {
				if (requested.module.name == 'drawerlayout') {
					details.useVersion '1.1.1'
				}
			} else if (requested.group == 'androidx.core') {
				if (requested.module.name == 'core') {
					details.useVersion rootProject.ext.androidxCoreVersion
				}
			} else if (requested.group == 'androidx.fragment') {
				if (requested.module.name == 'fragment') {
					details.useVersion '1.3.5'
				}
			} else if (requested.group == 'androidx.coordinatorlayout') {
				if (requested.module.name == 'coordinatorlayout') {
					details.useVersion rootProject.ext.coordinatorlayoutVersion
				}
			} else if (requested.group == 'com.squareup.okio') {
				details.useVersion rootProject.ext.okioVersion
			} else if (requested.group == 'io.reactivex.rxjava2') {
				if (requested.module.name == 'rxjava') {
					details.useVersion rootProject.ext.rxJavaVersion
				} else if (requested.module.name == 'rxandroid') {
					details.useVersion rootProject.ext.rxAndroidVersion
				}
			} else if (requested.group == 'com.github.CymChad') {
				if (requested.module.name == 'BaseRecyclerViewAdapterHelper') {
					details.useVersion rootProject.ext.brvahVersion
				}
			} else if (requested.group == 'androidx.recyclerview') {
				if (requested.module.name == 'recyclerview') {
					details.useVersion rootProject.ext.recyclerviewVersion
				}
			} else if (requested.group == 'androidx.lifecycle') {
				if (requested.module.name == 'lifecycle-livedata-core') {
					details.useVersion rootProject.ext.lifeVersion
				} else if (requested.module.name == 'lifecycle-livedata') {
					details.useVersion rootProject.ext.lifeVersion
				} else if (requested.module.name == 'lifecycle-viewmodel') {
					details.useVersion rootProject.ext.lifeVersion
				}
			} else if (requested.group == 'org.jetbrains.kotlin') {
				details.useVersion rootProject.ext.kotlinVersion
			} else if (requested.group == 'androidx.camera') {
				if (requested.module.name == 'camera-core') {
					details.useVersion rootProject.ext.cameraxVersion
				} else if (requested.module.name == 'camera-camera2') {
					details.useVersion rootProject.ext.cameraxVersion
				} else if (requested.module.name == 'camera-lifecycle') {
					details.useVersion rootProject.ext.cameraxVersion
				} else if (requested.module.name == 'camera-view') {
					details.useVersion rootProject.ext.cameraxExtensionsVersion
				} else if (requested.module.name == 'camera-extensions') {
					details.useVersion rootProject.ext.cameraxExtensionsVersion
				}
			} else if (requested.group == 'com.squareup.okio') {
				details.useVersion rootProject.ext.okioVersion
			} else if (requested.group == 'io.reactivex.rxjava2') {
				if (requested.module.name == 'rxjava') {
					details.useVersion rootProject.ext.rxJavaVersion
				} else if (requested.module.name == 'rxandroid') {
					details.useVersion rootProject.ext.rxAndroidVersion
				}
			} else if (requested.group == 'com.squareup.okhttp3') {
				if (requested.module.name == 'okhttp') {
					details.useVersion rootProject.ext.okHttpVersion
				} else if (requested.module.name == 'logging-interceptor') {
					details.useVersion rootProject.ext.okHttpVersion
				}
			} else if (requested.group == 'org.jetbrains.kotlin') {
				details.useVersion rootProject.ext.kotlinVersion
			} else if (requested.group == 'com.jakewharton.timber') {
				details.useVersion rootProject.ext.timberVersion
			}
		}
	}
}